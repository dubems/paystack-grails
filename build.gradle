buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
    }
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"
apply plugin: "com.gradle.plugin-publish"


repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}
configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

version "1.0.5"
group "org.grails.plugins"
bintray {
    pkg {
        userOrg = '' // If you want to publish to an organization
        name = "$project.name"
        issueTrackerUrl = "https://github.com/dubems/$project.name/issues"
        vcsUrl = "https://github.com/dubems/$project.name"
        version {
            attributes = ['grails-plugin': "$project.group:$project.name"]
            name = project.version
        }
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1')
    compile(group:'org.apache.httpcomponents',name:'httpclient',version:'4.3.6')
    compile(group:'org.apache.httpcomponents',name:'fluent-hc',version:'4.3.6')
    compile(group:'org.apache.httpcomponents',name:'httpclient-cache',version:'4.3.6')
    compile(group:'org.apache.httpcomponents',name:'httpmime',version:'4.3.6')
    compile 'org.grails:grails-datastore-rest-client:5.0.0.RC2'
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"
}


bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

grailsPublish {
    // TODO: Provide values here
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    githubSlug = 'dubems/paystack-grails'
    userOrg = '' // Optional
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Paystack Plugin"
    desc = "Plugin to communicate with paystack API"
    developers = [dubem: "Nriagu Dubem"]
    portalUser = ""
    portalPassword = ""
}


 pluginBundle {
    website = 'https://github.com/dubems/paystack-grails'
    vcsUrl = 'https://github.com/dubems/paystack-grails'
    description = 'Paystack plugin for integrating with the API'
    tags = ['paystack', 'grails', 'api']

    plugins {
        grailsPaystackPlugin {
            id = 'com.dubems.paystack'
            displayName = 'Grails Paystack plugin'
            version = '0.3.2'
        }
    }
}

assets {
    packagePlugin = true
}
